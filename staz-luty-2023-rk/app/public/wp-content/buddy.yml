- pipeline: "Linter for the code on PR"
  on: "EVENT"
  events:
    - type: "CREATE_REF"
      refs:
        - "refs/pull/*"
    - type: "PUSH"
      refs:
        - "refs/pull/*"
  priority: "NORMAL"
  fail_on_prepare_env_warning: true
  actions:
    - action: "Merge conflicts committed"
      type: "BUILD"
      working_directory: "/buddy/$BUDDY_PROJECT_NAME"
      main_service_name: "Main"
      docker_image_name: "library/ubuntu"
      docker_image_tag: "18.04"
      execute_commands:
        - "! git grep -E \"<<<<<<< |>>>>>>> \" -- './' ':!buddy.yml' ':!.buddy/*'"
      setup_commands:
        - "apt-get update && apt-get -y install git"
      volume_mappings:
        - "/:/buddy/$BUDDY_PROJECT_NAME"
      cache_base_image: true
      shell: "BASH"
    - action: "Check if we don't have committed unnecessary files"
      type: "BUILD"
      working_directory: "/buddy/$BUDDY_PROJECT_NAME"
      main_service_name: "Main"
      docker_image_name: "library/ubuntu"
      docker_image_tag: "18.04"
      execute_commands:
        - " if [[ ! -z $(git ls-files -i -c --exclude-standard) ]]; then exit 1; fi"
      setup_commands:
        - "apt-get update && apt-get -y install git"
      volume_mappings:
        - "/:/buddy/$BUDDY_PROJECT_NAME"
      cache_base_image: true
      shell: "BASH"
    - action: "Execute npm run lint:scss"
      type: "BUILD"
      working_directory: "/buddy/$BUDDY_PROJECT_NAME"
      main_service_name: "Main"
      docker_image_name: "library/node"
      docker_image_tag: "16"
      execute_commands:
        - "npm install"
        - "npm run lint:scss"
      volume_mappings:
        - "/:/buddy/$BUDDY_PROJECT_NAME"
      cache_base_image: true
      shell: "BASH"
    - action: "Execute npm run lint:js"
      type: "BUILD"
      working_directory: "/buddy/$BUDDY_PROJECT_NAME"
      main_service_name: "Main"
      docker_image_name: "library/node"
      docker_image_tag: "16"
      execute_commands:
        - "npm run lint:js"
      volume_mappings:
        - "/:/buddy/$BUDDY_PROJECT_NAME"
      cache_base_image: true
      shell: "BASH"
    - action: "Execute: composer run-script lint"
      type: "BUILD"
      working_directory: "/buddy/$BUDDY_PROJECT_NAME"
      docker_image_name: "library/php"
      docker_image_tag: "7.4"
      execute_commands:
        - "composer install"
        - "composer run-script lint"
      setup_commands:
        - "echo \"memory_limit=-1\" >> /usr/local/etc/php/conf.d/buddy.ini"
        - "apt-get update && apt-get install -y git zip"
        - "curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer"
        - "# php ext gd"
        - "apt-get install -y libfreetype6-dev"
        - "apt-get install -y libjpeg62-turbo-dev"
        - "apt-get install -y libpng-dev"
        - "docker-php-ext-configure gd --with-freetype --with-jpeg"
        - "docker-php-ext-install gd"
        - "# php ext zip"
        - "apt-get install -y zip"
        - "apt-get install -y unzip"
        - "apt-get install -y zlib1g-dev"
        - "apt-get install -y libzip-dev"
        - "docker-php-ext-install zip"
        - "# php ext pdo_mysql"
        - "docker-php-ext-configure pdo_mysql --with-pdo-mysql"
        - "docker-php-ext-install pdo_mysql"
      volume_mappings:
        - "/:/buddy/$BUDDY_PROJECT_NAME"
      cache_base_image: true
      shell: "BASH"
- pipeline: "Linter for the code on master"
  on: "EVENT"
  events:
    - type: "PUSH"
      refs:
        - "refs/heads/master"
  priority: "NORMAL"
  fail_on_prepare_env_warning: true
  actions:
    - action: "Merge conflicts committed"
      type: "BUILD"
      working_directory: "/buddy/$BUDDY_PROJECT_NAME"
      main_service_name: "Main"
      docker_image_name: "library/ubuntu"
      docker_image_tag: "18.04"
      execute_commands:
        - "! git grep -E \"<<<<<<< |>>>>>>> \" -- './' ':!buddy.yml' ':!.buddy/*'"
      setup_commands:
        - "apt-get update && apt-get -y install git"
      volume_mappings:
        - "/:/buddy/$BUDDY_PROJECT_NAME"
      cache_base_image: true
      shell: "BASH"
    - action: "Check if we don't have committed unnecessary files"
      type: "BUILD"
      working_directory: "/buddy/$BUDDY_PROJECT_NAME"
      main_service_name: "Main"
      docker_image_name: "library/ubuntu"
      docker_image_tag: "18.04"
      execute_commands:
        - " if [[ ! -z $(git ls-files -i -c --exclude-standard) ]]; then exit 1; fi"
      setup_commands:
        - "apt-get update && apt-get -y install git"
      volume_mappings:
        - "/:/buddy/$BUDDY_PROJECT_NAME"
      cache_base_image: true
      shell: "BASH"
    - action: "Execute npm run lint:scss"
      type: "BUILD"
      working_directory: "/buddy/$BUDDY_PROJECT_NAME"
      main_service_name: "Main"
      docker_image_name: "library/node"
      docker_image_tag: "16"
      execute_commands:
        - "npm install"
        - "npm run lint:scss"
      volume_mappings:
        - "/:/buddy/$BUDDY_PROJECT_NAME"
      cache_base_image: true
      shell: "BASH"
    - action: "Execute npm run lint:js"
      type: "BUILD"
      working_directory: "/buddy/$BUDDY_PROJECT_NAME"
      main_service_name: "Main"
      docker_image_name: "library/node"
      docker_image_tag: "16"
      execute_commands:
        - "npm run lint:js"
      volume_mappings:
        - "/:/buddy/$BUDDY_PROJECT_NAME"
      cache_base_image: true
      shell: "BASH"
    - action: "Execute: composer run-script lint"
      type: "BUILD"
      working_directory: "/buddy/$BUDDY_PROJECT_NAME"
      docker_image_name: "library/php"
      docker_image_tag: "7.4"
      execute_commands:
        - "composer install"
        - "composer run-script lint"
      setup_commands:
        - "echo \"memory_limit=-1\" >> /usr/local/etc/php/conf.d/buddy.ini"
        - "apt-get update && apt-get install -y git zip"
        - "curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer"
        - "# php ext gd"
        - "apt-get install -y libfreetype6-dev"
        - "apt-get install -y libjpeg62-turbo-dev"
        - "apt-get install -y libpng-dev"
        - "docker-php-ext-configure gd --with-freetype --with-jpeg"
        - "docker-php-ext-install gd"
        - "# php ext zip"
        - "apt-get install -y zip"
        - "apt-get install -y unzip"
        - "apt-get install -y zlib1g-dev"
        - "apt-get install -y libzip-dev"
        - "docker-php-ext-install zip"
        - "# php ext pdo_mysql"
        - "docker-php-ext-configure pdo_mysql --with-pdo-mysql"
        - "docker-php-ext-install pdo_mysql"
      volume_mappings:
        - "/:/buddy/$BUDDY_PROJECT_NAME"
      cache_base_image: true
      shell: "BASH"
- pipeline: "Deploy to alpha"
  on: "EVENT"
  events:
    - type: "PUSH"
      refs:
        - "refs/heads/master"
  priority: "NORMAL"
  fail_on_prepare_env_warning: true
  actions:
    - action: "Execute: rm -rf bundle and vendor"
      type: "BUILD"
      working_directory: "/buddy/$BUDDY_PROJECT_NAME"
      docker_image_name: "library/ubuntu"
      docker_image_tag: "18.04"
      execute_commands:
        - "rm -rf bundle"
        - "rm -rf vendor"
      volume_mappings:
        - "/:/buddy/$BUDDY_PROJECT_NAME"
      cache_base_image: true
      shell: "BASH"
    - action: "composer install"
      type: "BUILD"
      working_directory: "/buddy/$BUDDY_PROJECT_NAME"
      docker_image_name: "library/php"
      docker_image_tag: "7.4"
      execute_commands:
        - "composer install --no-dev"
        - ""
      setup_commands:
        - "echo \"memory_limit=-1\" >> /usr/local/etc/php/conf.d/buddy.ini"
        - "apt-get update && apt-get install -y git zip"
        - "curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer"
        - "# php ext gd"
        - "apt-get install -y libfreetype6-dev"
        - "apt-get install -y libjpeg62-turbo-dev"
        - "apt-get install -y libpng-dev"
        - "docker-php-ext-configure gd --with-freetype --with-jpeg"
        - "docker-php-ext-install gd"
        - "# php ext zip"
        - "apt-get install -y zip"
        - "apt-get install -y unzip"
        - "apt-get install -y zlib1g-dev"
        - "apt-get install -y libzip-dev"
        - "docker-php-ext-install zip"
        - "# php ext pdo_mysql"
        - "docker-php-ext-configure pdo_mysql --with-pdo-mysql"
        - "docker-php-ext-install pdo_mysql"
      volume_mappings:
        - "/:/buddy/$BUDDY_PROJECT_NAME"
      cache_base_image: true
      shell: "BASH"
    - action: "Install dependencies"
      type: "BUILD"
      working_directory: "/buddy/$BUDDY_PROJECT_NAME"
      main_service_name: "Main"
      docker_image_name: "library/node"
      docker_image_tag: "16"
      execute_commands:
        - "npm install"
        - ""
      volume_mappings:
        - "/:/buddy/$BUDDY_PROJECT_NAME"
      cache_base_image: true
      shell: "BASH"
    - action: "Execute npm run bundle:vendor"
      type: "BUILD"
      working_directory: "/buddy/$BUDDY_PROJECT_NAME"
      main_service_name: "Main"
      docker_image_name: "library/node"
      docker_image_tag: "16"
      execute_commands:
        - "npm run bundle:vendor"
      volume_mappings:
        - "/:/buddy/$BUDDY_PROJECT_NAME"
      cache_base_image: true
      shell: "BASH"
    - action: "Execute npm run bundle:theme"
      type: "BUILD"
      working_directory: "/buddy/$BUDDY_PROJECT_NAME"
      main_service_name: "Main"
      docker_image_name: "library/node"
      docker_image_tag: "16"
      execute_commands:
        - "npm run bundle:theme"
      volume_mappings:
        - "/:/buddy/$BUDDY_PROJECT_NAME"
      cache_base_image: true
      shell: "BASH"
    - action: "Execute npm run bundle:plugin"
      type: "BUILD"
      working_directory: "/buddy/$BUDDY_PROJECT_NAME"
      main_service_name: "Main"
      docker_image_name: "library/node"
      docker_image_tag: "16"
      execute_commands:
        - "npm run bundle:plugin"
      volume_mappings:
        - "/:/buddy/$BUDDY_PROJECT_NAME"
      cache_base_image: true
      shell: "BASH"
    - action: "Execute: rm -rf theme"
      type: "SSH_COMMAND"
      working_directory: "/opt/bitnami/wordpress/wp-content/themes"
      login: "bitnami"
      host: "$ALPHA_SERVER_IP"
      port: "22"
      env_key: "secure!ouW7s2HrUW7X+zTQOrw1aw==.i79SOsnUbEiqHFiorD3HxA=="
      authentication_mode: "ENV_KEY"
      commands:
        - "rm -rf theme"
      run_as_script: true
      shell: "BASH"
    - action: "Execute: rm -rf vendor"
      type: "SSH_COMMAND"
      working_directory: "/opt/bitnami/wordpress/wp-content"
      login: "bitnami"
      host: "$ALPHA_SERVER_IP"
      port: "22"
      env_key: "secure!ouW7s2HrUW7X+zTQOrw1aw==.i79SOsnUbEiqHFiorD3HxA=="
      authentication_mode: "ENV_KEY"
      commands:
        - "rm -rf vendor"
      run_as_script: true
      shell: "BASH"
    - action: "Execute: rm -rf plugin"
      type: "SSH_COMMAND"
      working_directory: "/opt/bitnami/wordpress/wp-content/plugins"
      login: "bitnami"
      host: "$ALPHA_SERVER_IP"
      port: "22"
      env_key: "secure!ouW7s2HrUW7X+zTQOrw1aw==.i79SOsnUbEiqHFiorD3HxA=="
      authentication_mode: "ENV_KEY"
      commands:
        - "rm -rf plugin"
      run_as_script: true
      shell: "BASH"
    - action: "Upload theme to server"
      type: "SFTP"
      input_type: "BUILD_ARTIFACTS"
      local_path: "bundle/theme.zip"
      remote_path: "/opt/bitnami/wordpress/wp-content/themes"
      login: "bitnami"
      host: "$ALPHA_SERVER_IP"
      port: "22"
      env_key: "secure!ouW7s2HrUW7X+zTQOrw1aw==.i79SOsnUbEiqHFiorD3HxA=="
      authentication_mode: "ENV_KEY"
    - action: "Upload vendor to server"
      type: "SFTP"
      input_type: "BUILD_ARTIFACTS"
      local_path: "bundle/vendor.zip"
      remote_path: "/opt/bitnami/wordpress/wp-content"
      login: "bitnami"
      host: "$ALPHA_SERVER_IP"
      port: "22"
      env_key: "secure!ouW7s2HrUW7X+zTQOrw1aw==.i79SOsnUbEiqHFiorD3HxA=="
      authentication_mode: "ENV_KEY"
    - action: "Upload plugin to server"
      type: "SFTP"
      input_type: "BUILD_ARTIFACTS"
      local_path: "bundle/plugin.zip"
      remote_path: "/opt/bitnami/wordpress/wp-content/plugins"
      login: "bitnami"
      host: "$ALPHA_SERVER_IP"
      port: "22"
      env_key: "secure!ouW7s2HrUW7X+zTQOrw1aw==.i79SOsnUbEiqHFiorD3HxA=="
      authentication_mode: "ENV_KEY"
    - action: "Unzip theme and rm"
      type: "SSH_COMMAND"
      working_directory: "/opt/bitnami/wordpress/wp-content/themes"
      login: "bitnami"
      host: "$ALPHA_SERVER_IP"
      port: "22"
      env_key: "secure!ouW7s2HrUW7X+zTQOrw1aw==.i79SOsnUbEiqHFiorD3HxA=="
      authentication_mode: "ENV_KEY"
      commands:
        - "unzip theme.zip -d theme"
        - "sudo rm -rf theme.zip"
      run_as_script: true
      shell: "BASH"
    - action: "Unzip vendor and rm"
      type: "SSH_COMMAND"
      working_directory: "/opt/bitnami/wordpress/wp-content"
      login: "bitnami"
      host: "$ALPHA_SERVER_IP"
      port: "22"
      env_key: "secure!ouW7s2HrUW7X+zTQOrw1aw==.i79SOsnUbEiqHFiorD3HxA=="
      authentication_mode: "ENV_KEY"
      commands:
        - "unzip vendor.zip -d vendor"
        - "sudo rm -rf vendor.zip"
      run_as_script: true
      shell: "BASH"
    - action: "Unzip plugin and rm"
      type: "SSH_COMMAND"
      working_directory: "/opt/bitnami/wordpress/wp-content/plugins"
      login: "bitnami"
      host: "$ALPHA_SERVER_IP"
      port: "22"
      env_key: "secure!ouW7s2HrUW7X+zTQOrw1aw==.i79SOsnUbEiqHFiorD3HxA=="
      authentication_mode: "ENV_KEY"
      commands:
        - "unzip plugin.zip -d plugin"
        - "sudo rm -rf plugin.zip"
      run_as_script: true
      shell: "BASH"
- pipeline: "Deploy to staging"
  on: "CLICK"
  refs:
    - "refs/heads/master"
  priority: "NORMAL"
  fail_on_prepare_env_warning: true
  actions:
    - action: "Execute: rm -rf bundle and vendor"
      type: "BUILD"
      working_directory: "/buddy/$BUDDY_PROJECT_NAME"
      docker_image_name: "library/ubuntu"
      docker_image_tag: "18.04"
      execute_commands:
        - "rm -rf bundle"
        - "rm -rf vendor"
      volume_mappings:
        - "/:/buddy/$BUDDY_PROJECT_NAME"
      cache_base_image: true
      shell: "BASH"
    - action: "composer install"
      type: "BUILD"
      working_directory: "/buddy/$BUDDY_PROJECT_NAME"
      docker_image_name: "library/php"
      docker_image_tag: "7.4"
      execute_commands:
        - "composer install --no-dev"
        - ""
      setup_commands:
        - "echo \"memory_limit=-1\" >> /usr/local/etc/php/conf.d/buddy.ini"
        - "apt-get update && apt-get install -y git zip"
        - "curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer"
        - "# php ext gd"
        - "apt-get install -y libfreetype6-dev"
        - "apt-get install -y libjpeg62-turbo-dev"
        - "apt-get install -y libpng-dev"
        - "docker-php-ext-configure gd --with-freetype --with-jpeg"
        - "docker-php-ext-install gd"
        - "# php ext zip"
        - "apt-get install -y zip"
        - "apt-get install -y unzip"
        - "apt-get install -y zlib1g-dev"
        - "apt-get install -y libzip-dev"
        - "docker-php-ext-install zip"
        - "# php ext pdo_mysql"
        - "docker-php-ext-configure pdo_mysql --with-pdo-mysql"
        - "docker-php-ext-install pdo_mysql"
      volume_mappings:
        - "/:/buddy/$BUDDY_PROJECT_NAME"
      cache_base_image: true
      shell: "BASH"
    - action: "Install dependencies and build everything"
      type: "BUILD"
      working_directory: "/buddy/$BUDDY_PROJECT_NAME"
      main_service_name: "Main"
      docker_image_name: "library/node"
      docker_image_tag: "16"
      execute_commands:
        - "npm install"
        - "npm run bundle:everything"
      volume_mappings:
        - "/:/buddy/$BUDDY_PROJECT_NAME"
      cache_base_image: true
      shell: "BASH"
    - action: "Execute: rm -rf theme"
      type: "SSH_COMMAND"
      working_directory: "/opt/bitnami/wordpress/wp-content/themes"
      login: "bitnami"
      host: "$STAGIN_SERVER_IP"
      port: "22"
      env_key: "secure!ouW7s2HrUW7X+zTQOrw1aw==.i79SOsnUbEiqHFiorD3HxA=="
      authentication_mode: "ENV_KEY"
      commands:
        - "rm -rf theme"
      run_as_script: true
      shell: "BASH"
    - action: "Execute: rm -rf vendor"
      type: "SSH_COMMAND"
      working_directory: "/opt/bitnami/wordpress/wp-content"
      login: "bitnami"
      host: "$STAGIN_SERVER_IP"
      port: "22"
      env_key: "secure!ouW7s2HrUW7X+zTQOrw1aw==.i79SOsnUbEiqHFiorD3HxA=="
      authentication_mode: "ENV_KEY"
      commands:
        - "rm -rf vendor"
      run_as_script: true
      shell: "BASH"
    - action: "Execute: rm -rf plugin"
      type: "SSH_COMMAND"
      working_directory: "/opt/bitnami/wordpress/wp-content/plugins"
      login: "bitnami"
      host: "$STAGIN_SERVER_IP"
      port: "22"
      env_key: "secure!ouW7s2HrUW7X+zTQOrw1aw==.i79SOsnUbEiqHFiorD3HxA=="
      authentication_mode: "ENV_KEY"
      commands:
        - "rm -rf plugin"
      run_as_script: true
      shell: "BASH"
    - action: "Upload theme to server"
      type: "SFTP"
      input_type: "BUILD_ARTIFACTS"
      local_path: "bundle/theme.zip"
      remote_path: "/opt/bitnami/wordpress/wp-content/themes"
      login: "bitnami"
      host: "$STAGIN_SERVER_IP"
      port: "22"
      env_key: "secure!ouW7s2HrUW7X+zTQOrw1aw==.i79SOsnUbEiqHFiorD3HxA=="
      authentication_mode: "ENV_KEY"
    - action: "Upload vendor to server"
      type: "SFTP"
      input_type: "BUILD_ARTIFACTS"
      local_path: "bundle/vendor.zip"
      remote_path: "/opt/bitnami/wordpress/wp-content"
      login: "bitnami"
      host: "$STAGIN_SERVER_IP"
      port: "22"
      env_key: "secure!ouW7s2HrUW7X+zTQOrw1aw==.i79SOsnUbEiqHFiorD3HxA=="
      authentication_mode: "ENV_KEY"
    - action: "Upload plugin to server"
      type: "SFTP"
      input_type: "BUILD_ARTIFACTS"
      local_path: "bundle/plugin.zip"
      remote_path: "/opt/bitnami/wordpress/wp-content/plugins"
      login: "bitnami"
      host: "$STAGIN_SERVER_IP"
      port: "22"
      env_key: "secure!ouW7s2HrUW7X+zTQOrw1aw==.i79SOsnUbEiqHFiorD3HxA=="
      authentication_mode: "ENV_KEY"
    - action: "Unzip theme and rm"
      type: "SSH_COMMAND"
      working_directory: "/opt/bitnami/wordpress/wp-content/themes"
      login: "bitnami"
      host: "$STAGIN_SERVER_IP"
      port: "22"
      env_key: "secure!ouW7s2HrUW7X+zTQOrw1aw==.i79SOsnUbEiqHFiorD3HxA=="
      authentication_mode: "ENV_KEY"
      commands:
        - "unzip theme.zip -d theme"
        - "sudo rm -rf theme.zip"
      run_as_script: true
      shell: "BASH"
    - action: "Unzip vendor and rm"
      type: "SSH_COMMAND"
      working_directory: "/opt/bitnami/wordpress/wp-content"
      login: "bitnami"
      host: "$STAGIN_SERVER_IP"
      port: "22"
      env_key: "secure!ouW7s2HrUW7X+zTQOrw1aw==.i79SOsnUbEiqHFiorD3HxA=="
      authentication_mode: "ENV_KEY"
      commands:
        - "unzip vendor.zip -d vendor"
        - "sudo rm -rf vendor.zip"
      run_as_script: true
      shell: "BASH"
    - action: "Unzip plugin and rm"
      type: "SSH_COMMAND"
      working_directory: "/opt/bitnami/wordpress/wp-content/plugins"
      login: "bitnami"
      host: "$STAGIN_SERVER_IP"
      port: "22"
      env_key: "secure!ouW7s2HrUW7X+zTQOrw1aw==.i79SOsnUbEiqHFiorD3HxA=="
      authentication_mode: "ENV_KEY"
      commands:
        - "unzip plugin.zip -d plugin"
        - "sudo rm -rf plugin.zip"
      run_as_script: true
      shell: "BASH"
